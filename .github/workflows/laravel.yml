name: CI
on: [push]
jobs:
 
  dusk-php:
    runs-on: ubuntu-latest
    env:
      APP_URL: "http://127.0.0.1:8000"
      DB_USERNAME: root
      DB_PASSWORD: root
      MAIL_MAILER: log
      DB_DATABASE: dusk
      DUSK_HEADLESS: true
      TEST_VAR1: Testing 123
    steps:
      - uses: actions/checkout@v3
      - name: Prepare The Environment
        run: cp .env.example .env
      - name: Create Database
        run: |
          sudo systemctl start mysql
          mysql --user="root" --password="root" -e "CREATE DATABASE \`dusk\` character set UTF8mb4 collate utf8mb4_bin;"
      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader
      - name: Generate Application Key
        run: php artisan key:generate
      - name: Install npm
        run: npm install
      - name: Upgrade Chrome Driver
        run: php artisan dusk:chrome-driver --detect
      - name: Ensure the ChromeDriver binaries are executable
        run: sudo chmod -R 0755 ./vendor/laravel/dusk/bin/
      - name: Start Chrome Driver
        run: ./vendor/laravel/dusk/bin/chromedriver-linux &
      - name: Check Chrome version
        run: /usr/bin/chromium-browser --version
      - name: Check Laravel version
        run: php artisan --version
      - name: Install breeze
        run: composer require laravel/breeze --dev
      - name: Install blade
        run: |
          php artisan breeze:install blade
      - name: DB Migrate
        run: php artisan migrate
      - name: Clear cache
        run: php artisan config:clear
      - name: Run Laravel Server
        run: php artisan serve --no-reload &
      - name: PHPUnit
        run: ./vendor/bin/phpunit --do-not-cache-result
      #- uses: php-actions/composer@v6 # or alternative dependency management
      - uses: php-actions/phpstan@v3
        with:
          path: ./
          memory_limit: -1
      - name: Test env var
        run: echo "${{ env.TEST_VAR1 }} ${{ vars.TEST_VAR }}"
      - name: Run Dusk Tests
        run: sudo php artisan dusk:chrome --filter LoginTest 
      - name: Check file exists
        run: test -e ./tests/Browser/source/Src_001.txt && echo file exists || echo file not found
      - name: Page source
        run: cat ./tests/Browser/source/Src_001.txt
      - name: Upload Screenshots
        #if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: tests/Browser/screenshots
      - name: Upload Console Logs
        #if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: console
          path: tests/Browser/console
      - name: Check PHPUnit file exists
        run: test -e ./vendor/bin/phpunit && echo file exists || echo file not found
      - name: Clear cache
        run: php artisan cache:clear
      #- name: PHPUnit
      #  run: ./vendor/bin/phpunit --do-not-cache-result
      - name: Artisan test
        run: php artisan test
          
      #- name: Yii PHPUnit
        # You may pin to the exact commit or the version.
        # uses: inquid/yii-phpunit-action@0af32e0897a0c0258686a00159e2d572f4fb547e
        #uses: inquid/yii-phpunit-action@v0.2.0
          
     # - name: Laravel PHPUnit
        # You may pin to the exact commit or the version.
        # uses: nathanheffley/laravel-phpunit-action@1ac680fbc5f20621343f0d7ba450a02b807c576e
        #uses: nathanheffley/laravel-phpunit-action@v0.1.0
  
  download:
    runs-on: ubuntu-latest
    needs: dusk-php
    steps:
      - name: Download screenshot
        uses: actions/download-artifact@v3
        with:
          name: screenshots
  
  #php-unit:
    #runs-on: ubuntu-latest
    #needs: download
    #steps:
      #- name: PHPUnit
        #run: ./vendor/bin/phpunit
        #run: phpunit --filter LoginTest tests/Unit/LoginTest.php
